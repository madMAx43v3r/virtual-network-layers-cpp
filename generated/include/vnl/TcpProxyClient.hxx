
#ifndef INCLUDE_VNI_GENERATED_vnl_TcpProxy_CLIENT_HXX_
#define INCLUDE_VNI_GENERATED_vnl_TcpProxy_CLIENT_HXX_

// AUTO GENERATED by virtual-network-interface codegen


#include <vnl/TcpUplinkClient.hxx>


namespace vnl {

class TcpProxyClient : public vnl::TcpUplinkClient {
public:
	class Writer : public vnl::TcpUplinkClient::Writer {
	public:
		Writer(vnl::io::TypeOutput& _out, bool _top_level = false) 
			:	vnl::TcpUplinkClient::Writer(_out, false),
				_out(_out), _top_level(_top_level)
		{
			if(_top_level) {
				_out.putEntry(VNL_IO_INTERFACE, VNL_IO_BEGIN);
				_out.putHash(0x33de85dc);
			}
		}
		~Writer() {
			if(_top_level) {
				_out.putEntry(VNL_IO_INTERFACE, VNL_IO_END);
			}
		}
	protected:
		vnl::io::TypeOutput& _out;
		bool _top_level;
	};
	
	TcpProxyClient() {}
	
	TcpProxyClient(const TcpProxyClient& other) {
		vnl::Client::set_address(other.vnl::Client::get_address());
	}
	
	TcpProxyClient(const vnl::Address& addr) {
		vnl::Client::set_address(addr);
	}
	
	TcpProxyClient& operator=(const vnl::Address& addr) {
		vnl::Client::set_address(addr);
		return *this;
	}
	
};


} // namespace

#endif // INCLUDE_VNI_GENERATED_vnl_TcpProxy_CLIENT_HXX_
